image:
  tainaedoctor/rancher-cli2-kubectl:latest

stages:
  - build
  - test
  - deploy_alpha
  - build_beta
  - deploy_beta
  - deploy_production

build:
  stage: build
  only:
    - develop
    - test
    - /^v\d+\.\d+\.\d+.*$/
  script:
    - echo $CI_COMMIT_BRANCH
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
    - docker build --build-arg RUN_ENV=$CI_COMMIT_BRANCH -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA ./ && docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    - if [[ ! -z "$CI_COMMIT_TAG" ]]; then (docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG && docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG); else echo "Skiped push tag"; fi

build_beta:
  stage: build_beta
  only:
    - develop
  when: manual
  script:
    - echo $CI_COMMIT_BRANCH
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA-staging || (docker build --build-arg RUN_ENV=staging -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA-staging ./ && docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA-staging)
    - if [[ ! -z "$CI_COMMIT_TAG" ]]; then (docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA-staging $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG && docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG); else echo "Skiped push tag"; fi

deploy_alpha:
  stage: deploy_alpha
  environment:
    name: alpha
    url: https://e-doctor.dev
  only:
    - develop
  allow_failure: false
  script:
    - export IMAGE_TAG=${CI_COMMIT_TAG:-$CI_COMMIT_SHORT_SHA}
    - if [[ -z "$IMAGE_TAG" ]]; then echo "Failed to get IMAGE_TAG" && exit 1; fi
    - if [[ -z "$RANCHER_ALPHA_URL" ]] || [[ -z "$RANCHER_ALPHA_TOKEN" ]] || [[ -z "$RANCHER_ALPHA_CONTEXT" ]]; then echo "Please set RANCHER_ALPHA_URL, RANCHER_ALPHA_TOKEN, RANCHER_ALPHA_CONTEXT in group CI/CD setting" && exit 1; fi
    - if [[ -z "$K8S_NAMESPACE" ]] || [[ -z "$K8S_DEPLOYMENT" ]] || [[ -z "$K8S_CONTAINER" ]]; then echo "Please set K8S_NAMESPACE, K8S_DEPLOYMENT, K8S_CONTAINER in project CI/CD setting" && exit 1; fi
    - rancher login $RANCHER_ALPHA_URL --token $RANCHER_ALPHA_TOKEN --context $RANCHER_ALPHA_CONTEXT
    - rancher kubectl --namespace="$K8S_NAMESPACE" patch deployment "$K8S_DEPLOYMENT" -p "{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\":\"$K8S_CONTAINER\",\"image\":\"$CI_REGISTRY_IMAGE:$IMAGE_TAG\",\"env\":[{\"name\":\"DEPLOYED_AT\",\"value\":\"$(date)\"}]}]}}}}"
    - rancher kubectl --namespace="$K8S_NAMESPACE" rollout status deployment $K8S_DEPLOYMENT -w

#deploy_beta:
#  stage: deploy_beta
#  environment:
#    name: beta
#    url: https://nhathuoc.edoctor-demo.com
#  only:
#    - /^v\d+\.\d+\.\d+.*$/
#  allow_failure: false
#  script:
#    - export IMAGE_TAG=${CI_COMMIT_TAG:-$CI_COMMIT_SHORT_SHA}
#    - if [[ -z "$IMAGE_TAG" ]]; then echo "Failed to get IMAGE_TAG" && exit 1; fi
#    - if [[ -z "$RANCHER_BETA_URL" ]] || [[ -z "$RANCHER_BETA_TOKEN" ]] || [[ -z "$RANCHER_BETA_CONTEXT" ]]; then echo "Please set RANCHER_BETA_URL, RANCHER_BETA_TOKEN, RANCHER_BETA_CONTEXT in group CI/CD setting" && exit 1; fi
#    - if [[ -z "$K8S_NAMESPACE" ]] || [[ -z "$K8S_DEPLOYMENT" ]] || [[ -z "$K8S_CONTAINER" ]]; then echo "Please set K8S_NAMESPACE, K8S_DEPLOYMENT, K8S_CONTAINER in project CI/CD setting" && exit 1; fi
#    - rancher login $RANCHER_BETA_URL --token $RANCHER_BETA_TOKEN --context $RANCHER_BETA_CONTEXT
#    - rancher kubectl --namespace="$K8S_NAMESPACE" patch deployment "$K8S_DEPLOYMENT" -p "{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\":\"$K8S_CONTAINER\",\"image\":\"$CI_REGISTRY_IMAGE:$IMAGE_TAG\",\"env\":[{\"name\":\"DEPLOYED_AT\",\"value\":\"$(date)\"}]}]}}}}"
#    - rancher kubectl --namespace="$K8S_NAMESPACE" rollout status deployment $K8S_DEPLOYMENT -w

deploy_beta_manual:
  stage: deploy_beta
  environment:
    name: beta
    url: https://edoctor-demo.com
  only:
    - develop
  when: manual
  allow_failure: true # Allow skip deploy to beta when create merge request
  script:
    - export IMAGE_TAG=${CI_COMMIT_TAG:-$CI_COMMIT_SHORT_SHA-staging}
    - if [[ -z "$IMAGE_TAG" ]]; then echo "Failed to get IMAGE_TAG" && exit 1; fi
    - if [[ -z "$RANCHER_BETA_URL" ]] || [[ -z "$RANCHER_BETA_TOKEN" ]] || [[ -z "$RANCHER_BETA_CONTEXT" ]]; then echo "Please set RANCHER_BETA_URL, RANCHER_BETA_TOKEN, RANCHER_BETA_CONTEXT in group CI/CD setting" && exit 1; fi
    - if [[ -z "$K8S_NAMESPACE" ]] || [[ -z "$K8S_DEPLOYMENT" ]] || [[ -z "$K8S_CONTAINER" ]]; then echo "Please set K8S_NAMESPACE, K8S_DEPLOYMENT, K8S_CONTAINER in project CI/CD setting" && exit 1; fi
    - rancher login $RANCHER_BETA_URL --token $RANCHER_BETA_TOKEN --context $RANCHER_BETA_CONTEXT
    - rancher kubectl --namespace="$K8S_NAMESPACE" patch deployment "$K8S_DEPLOYMENT" -p "{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\":\"$K8S_CONTAINER\",\"image\":\"$CI_REGISTRY_IMAGE:$IMAGE_TAG\",\"env\":[{\"name\":\"DEPLOYED_AT\",\"value\":\"$(date)\"}]}]}}}}"
    - rancher kubectl --namespace="$K8S_NAMESPACE" rollout status deployment $K8S_DEPLOYMENT -w

deploy_production:
  stage: deploy_production
  environment:
    name: production
    url: https://edoctor.io
  only:
    - /^v\d+\.\d+\.\d+.*$/
  allow_failure: false
  when: manual
  script:
    - export IMAGE_TAG=${CI_COMMIT_TAG:-$CI_COMMIT_SHORT_SHA}
    - if [[ -z "$IMAGE_TAG" ]]; then echo "Failed to get IMAGE_TAG" && exit 1; fi
    - if [[ -z "$RANCHER_PRODUCTION_URL" ]] || [[ -z "$RANCHER_PRODUCTION_TOKEN" ]] || [[ -z "$RANCHER_PRODUCTION_CONTEXT" ]]; then echo "Please set RANCHER_PRODUCTION_URL, RANCHER_PRODUCTION_TOKEN, RANCHER_PRODUCTION_CONTEXT in group CI/CD setting" && exit 1; fi
    - if [[ -z "$K8S_NAMESPACE" ]] || [[ -z "$K8S_DEPLOYMENT" ]] || [[ -z "$K8S_CONTAINER" ]]; then echo "Please set K8S_NAMESPACE, K8S_DEPLOYMENT, K8S_CONTAINER in project CI/CD setting" && exit 1; fi
    - rancher login $RANCHER_PRODUCTION_URL --token $RANCHER_PRODUCTION_TOKEN --context $RANCHER_PRODUCTION_CONTEXT
    - rancher kubectl --namespace="$K8S_NAMESPACE" patch deployment "$K8S_DEPLOYMENT" -p "{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\":\"$K8S_CONTAINER\",\"image\":\"$CI_REGISTRY_IMAGE:$IMAGE_TAG\",\"env\":[{\"name\":\"DEPLOYED_AT\",\"value\":\"$(date)\"}]}]}}}}"
    - rancher kubectl --namespace="$K8S_NAMESPACE" rollout status deployment $K8S_DEPLOYMENT -w
